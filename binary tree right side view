/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode*> q;
        vector<int> right_view;
          if(root==NULL)
        {
            return right_view;
        }
        q.push(root);
        while(q.size()){
            queue<TreeNode* > tempq;
            int last_node;
            while(q.size()){
                last_node=q.front()->val;
                if(q.front()->left){
                    tempq.push(q.front()->left);
                }
                if(q.front()->right){
                    tempq.push(q.front()->right);
                }
                q.pop();
            }
            right_view.push_back(last_node);
            q=tempq;
        }
        return right_view;
    }
};
