/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector <vector <int>> ans;
    queue<TreeNode* >q;
    int d=0;
    int maxDepth(TreeNode* root) {
         if(root==NULL){
            return d;
        }
        q.push(root);
        while(q.size()){
            vector<int> level_nodes;
            queue<TreeNode*> tempq;
            while(q.size()){
                TreeNode* node=q.front();
                if(node->left){
                    tempq.push(node->left);
                }
                 if(node->right){
                    tempq.push(node->right);
                }
                level_nodes.push_back(node->val);
                q.pop();
            }
            q=tempq;
            ans.push_back(level_nodes);
            d++;
        }
        return d;
    }
};
