class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n = nums.size();
        int k = 1;
        int sum = 1; // Initialize sum to 1, as a single number is considered a sequence of length 1
        
        sort(nums.begin(), nums.end());
        
        if (n == 0) {
            return 0;
        } else if (n == 1) {
            return 1;
        }
        
        for (int i = 0; i < n - 1; i++) { // Iterate until the second to last element
            if (nums[i + 1] - nums[i] == 1) {
                sum += 1;
            } else if (nums[i + 1] != nums[i]) { // Handle duplicate elements
                sum = 1;
            }
            k = max(sum, k);
        }
        
        return k;
    }
};
